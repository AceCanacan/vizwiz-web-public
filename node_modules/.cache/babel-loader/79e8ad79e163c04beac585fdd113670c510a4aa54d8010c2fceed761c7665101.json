{"ast":null,"code":"var _jsxFileName = \"/Users/acecanacan/my-react-app/src/components/CsvUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { useDropzone } from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CsvUploader() {\n  _s();\n  const [csvData, setCsvData] = useState([]);\n  const onDrop = acceptedFiles => {\n    const file = acceptedFiles[0];\n    Papa.parse(file, {\n      complete: result => {\n        // Assuming the CSV has headers and you want to skip the first row.\n        const data = result.data.slice(1, 11); // Read the first 10 rows.\n        setCsvData(data);\n      },\n      header: true // Treat the first row as headers.\n    });\n  };\n\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: \".csv\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: \"#\",\n    className: \"box-container\",\n    ...getRootProps(),\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag & drop a CSV file here, or click to select one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), csvData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"First 10 rows of the CSV:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(csvData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(CsvUploader, \"alPHe68OFGrrWaKoSqPvykCinws=\", false, function () {\n  return [useDropzone];\n});\n_c = CsvUploader;\nexport default CsvUploader;\nvar _c;\n$RefreshReg$(_c, \"CsvUploader\");","map":{"version":3,"names":["React","useState","Papa","useDropzone","jsxDEV","_jsxDEV","CsvUploader","_s","csvData","setCsvData","onDrop","acceptedFiles","file","parse","complete","result","data","slice","header","getRootProps","getInputProps","accept","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/acecanacan/my-react-app/src/components/CsvUploader.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { useDropzone } from \"react-dropzone\";\n\nfunction CsvUploader() {\n  const [csvData, setCsvData] = useState([]);\n  \n  const onDrop = (acceptedFiles) => {\n    const file = acceptedFiles[0];\n    \n    Papa.parse(file, {\n      complete: (result) => {\n        // Assuming the CSV has headers and you want to skip the first row.\n        const data = result.data.slice(1, 11); // Read the first 10 rows.\n        setCsvData(data);\n      },\n      header: true, // Treat the first row as headers.\n    });\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: \".csv\",\n  });\n\n  return (\n    <a href=\"#\" className=\"box-container\" {...getRootProps()}> {/* Wrap in an <a> tag */}\n      <div className=\"dropzone\">\n        <input {...getInputProps()} />\n        <p>Drag & drop a CSV file here, or click to select one</p>\n      </div>\n      {csvData.length > 0 && (\n        <div>\n          <h2>First 10 rows of the CSV:</h2>\n          <pre>{JSON.stringify(csvData, null, 2)}</pre>\n        </div>\n      )}\n    </a>\n  );\n}\n\nexport default CsvUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,MAAM,GAAIC,aAAa,IAAK;IAChC,MAAMC,IAAI,GAAGD,aAAa,CAAC,CAAC,CAAC;IAE7BT,IAAI,CAACW,KAAK,CAACD,IAAI,EAAE;MACfE,QAAQ,EAAGC,MAAM,IAAK;QACpB;QACA,MAAMC,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACvCR,UAAU,CAACO,IAAI,CAAC;MAClB,CAAC;MACDE,MAAM,EAAE,IAAI,CAAE;IAChB,CAAC,CAAC;EACJ,CAAC;;EAED,MAAM;IAAEC,YAAY;IAAEC;EAAc,CAAC,GAAGjB,WAAW,CAAC;IAClDO,MAAM;IACNW,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,oBACEhB,OAAA;IAAGiB,IAAI,EAAC,GAAG;IAACC,SAAS,EAAC,eAAe;IAAA,GAAKJ,YAAY,CAAC,CAAC;IAAAK,QAAA,GAAE,GAAC,eACzDnB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBnB,OAAA;QAAA,GAAWe,aAAa,CAAC;MAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9BvB,OAAA;QAAAmB,QAAA,EAAG;MAAmD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,EACLpB,OAAO,CAACqB,MAAM,GAAG,CAAC,iBACjBxB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAI;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClCvB,OAAA;QAAAmB,QAAA,EAAMM,IAAI,CAACC,SAAS,CAACvB,OAAO,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAER;AAACrB,EAAA,CAnCQD,WAAW;EAAA,QAgBsBH,WAAW;AAAA;AAAA6B,EAAA,GAhB5C1B,WAAW;AAqCpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}