{"ast":null,"code":"var _jsxFileName = \"/Users/acecanacan/my-react-app/src/components/header_interpret.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = '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';\nconst Header_Interpret = ({\n  csvHeaders\n}) => {\n  _s();\n  const [interpretations, setInterpretations] = useState({});\n  const [datasetInterpretation, setDatasetInterpretation] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const interpretHeader = useCallback(async header => {\n    const systemMessage = {\n      role: 'system',\n      content: `Interpret the CSV column header \"${header}\" in a very brief but detailed manner. Not more than two sentences`\n    };\n    const messages = [systemMessage];\n    try {\n      const response = await axios.post(API_URL, {\n        model: 'gpt-3.5-turbo',\n        messages: messages\n      }, {\n        headers: {\n          Authorization: `Bearer ${API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data.choices[0].message.content.trim();\n    } catch (error) {\n      var _error$response;\n      console.error('Error response from OpenAI:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      return 'Error interpreting header';\n    }\n  }, []);\n  const interpretDataset = useCallback(async () => {\n    const systemMessage = {\n      role: 'system',\n      content: `Provide an overall interpretation of a dataset in 2 sentences: ${csvHeaders.join(', ')}. Do not create an interpretation per column, just the dataset`\n    };\n    const messages = [systemMessage];\n    try {\n      const response = await axios.post(API_URL, {\n        model: 'gpt-3.5-turbo',\n        messages: messages\n      }, {\n        headers: {\n          Authorization: `Bearer ${API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data.choices[0].message.content.trim();\n    } catch (error) {\n      var _error$response2;\n      console.error('Error response from OpenAI:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      return 'Error interpreting dataset';\n    }\n  }, [csvHeaders]);\n  useEffect(() => {\n    const fetchInterpretations = async () => {\n      setLoading(true);\n      setError(null);\n      const newInterpretations = {};\n      for (const header of csvHeaders) {\n        newInterpretations[header] = await interpretHeader(header);\n      }\n      setInterpretations(newInterpretations);\n      setDatasetInterpretation(await interpretDataset()); // Interpret the entire dataset\n      setLoading(false);\n    };\n    if (csvHeaders.length > 0) {\n      fetchInterpretations();\n    }\n  }, [csvHeaders, interpretHeader, interpretDataset]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '50px'\n      },\n      children: loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading interpretations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Overall Dataset Interpretation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: datasetInterpretation,\n        onChange: e => setDatasetInterpretation(e.target.value),\n        style: {\n          width: '500px',\n          height: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), Object.keys(interpretations).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Interpretations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), Object.entries(interpretations).map(([header, interpretation]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [header, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: interpretation,\n          onChange: e => {\n            setInterpretations({\n              ...interpretations,\n              [header]: e.target.value\n            });\n          },\n          style: {\n            marginLeft: '10px',\n            width: '500px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)]\n      }, header, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Header_Interpret, \"/5R3n3b3p/2GdwBY8NbnR/zoTRA=\");\n_c = Header_Interpret;\nexport default Header_Interpret;\nvar _c;\n$RefreshReg$(_c, \"Header_Interpret\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","API_KEY","Header_Interpret","csvHeaders","_s","interpretations","setInterpretations","datasetInterpretation","setDatasetInterpretation","loading","setLoading","error","setError","interpretHeader","header","systemMessage","role","content","messages","response","post","model","headers","Authorization","data","choices","message","trim","_error$response","console","interpretDataset","join","_error$response2","fetchInterpretations","newInterpretations","length","children","style","display","flexDirection","justifyContent","alignItems","height","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","width","Object","keys","entries","map","interpretation","marginBottom","type","marginLeft","_c","$RefreshReg$"],"sources":["/Users/acecanacan/my-react-app/src/components/header_interpret.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = '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';\n\nconst Header_Interpret = ({ csvHeaders }) => {\n  const [interpretations, setInterpretations] = useState({});\n  const [datasetInterpretation, setDatasetInterpretation] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const interpretHeader = useCallback(async (header) => {\n    const systemMessage = {\n      role: 'system',\n      content: `Interpret the CSV column header \"${header}\" in a very brief but detailed manner. Not more than two sentences`,\n    };\n\n    const messages = [systemMessage];\n\n    try {\n      const response = await axios.post(\n        API_URL,\n        {\n          model: 'gpt-3.5-turbo',\n          messages: messages,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      return response.data.choices[0].message.content.trim();\n    } catch (error) {\n      console.error('Error response from OpenAI:', error.response?.data);\n      return 'Error interpreting header';\n    }\n  }, []);\n\n  const interpretDataset = useCallback(async () => {\n    const systemMessage = {\n      role: 'system',\n      content: `Provide an overall interpretation of a dataset in 2 sentences: ${csvHeaders.join(', ')}. Do not create an interpretation per column, just the dataset`,\n    };\n\n    const messages = [systemMessage];\n\n    try {\n      const response = await axios.post(\n        API_URL,\n        {\n          model: 'gpt-3.5-turbo',\n          messages: messages,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      return response.data.choices[0].message.content.trim();\n    } catch (error) {\n      console.error('Error response from OpenAI:', error.response?.data);\n      return 'Error interpreting dataset';\n    }\n  }, [csvHeaders]);\n\n  useEffect(() => {\n    const fetchInterpretations = async () => {\n      setLoading(true);\n      setError(null);\n      const newInterpretations = {};\n\n      for (const header of csvHeaders) {\n        newInterpretations[header] = await interpretHeader(header);\n      }\n\n      setInterpretations(newInterpretations);\n      setDatasetInterpretation(await interpretDataset()); // Interpret the entire dataset\n      setLoading(false);\n    };\n\n    if (csvHeaders.length > 0) {\n      fetchInterpretations();\n    }\n  }, [csvHeaders, interpretHeader, interpretDataset]);\n\n  return (\n    <>\n      <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: '50px' }}>\n        {loading && <p>Loading interpretations...</p>}\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n        <h2>Overall Dataset Interpretation</h2>\n        <textarea\n          value={datasetInterpretation}\n          onChange={(e) => setDatasetInterpretation(e.target.value)}\n          style={{ width: '500px', height: '100px' }}\n        />\n      </div>\n      {Object.keys(interpretations).length > 0 && (\n        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n          <h2>Interpretations</h2>\n          {Object.entries(interpretations).map(([header, interpretation]) => (\n            <div key={header} style={{ marginBottom: '10px' }}>\n              <strong>{header}:</strong>\n              <input \n                type=\"text\" \n                value={interpretation}\n                onChange={(e) => {\n                  setInterpretations({\n                    ...interpretations,\n                    [header]: e.target.value\n                  });\n                }}\n                style={{ marginLeft: '10px', width: '500px' }}\n              />\n            </div>\n          ))}\n        </div>\n      )}\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default Header_Interpret;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}