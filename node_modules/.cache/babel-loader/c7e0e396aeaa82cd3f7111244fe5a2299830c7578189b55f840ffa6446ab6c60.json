{"ast":null,"code":"var _jsxFileName = \"/Users/acecanacan/my-react-app/src/components/header_interpret.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Configuration,\n  OpenAIApi\n} = require(\"openai\");\nconst Header_Interpret = ({\n  csvHeaders\n}) => {\n  _s();\n  const openai = useMemo(() => {\n    const configuration = new Configuration({\n      apiKey: process.env.REACT_APP_OPENAI_API_KEY\n    });\n    return new OpenAIApi(configuration);\n  }, []);\n  const [interpretations, setInterpretations] = useState({});\n  const [loading, setLoading] = useState(false);\n  const interpretHeader = useCallback(async header => {\n    const result = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `Interpret the column header \"${header}\" in a CSV file.`,\n      temperature: 0.5,\n      max_tokens: 100\n    });\n    return result.data.choices[0].text.trim();\n  }, [openai]);\n  // Added openai to the dependency array\n\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchInterpretations = async () => {\n      setLoading(true);\n      setError(null); // Reset the error state\n      const newInterpretations = {};\n      for (const header of csvHeaders) {\n        try {\n          newInterpretations[header] = await interpretHeader(header);\n        } catch (error) {\n          newInterpretations[header] = \"Error interpreting header\";\n          setError(\"An error occurred while interpreting headers\"); // Set the error state\n        }\n      }\n\n      setInterpretations(newInterpretations);\n      setLoading(false);\n    };\n    if (csvHeaders.length > 0) {\n      fetchInterpretations();\n    }\n  }, [csvHeaders, interpretHeader]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\"\n      },\n      children: loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading interpretations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), Object.keys(interpretations).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Interpretations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), Object.entries(interpretations).map(([header, interpretation]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [header, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), \" \", interpretation]\n      }, header, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Header_Interpret, \"eYANRHLgZD+dyjhY2+XnRUnj1bA=\");\n_c = Header_Interpret;\nexport default Header_Interpret;\nvar _c;\n$RefreshReg$(_c, \"Header_Interpret\");","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","jsxDEV","_jsxDEV","Fragment","_Fragment","Configuration","OpenAIApi","require","Header_Interpret","csvHeaders","_s","openai","configuration","apiKey","process","env","REACT_APP_OPENAI_API_KEY","interpretations","setInterpretations","loading","setLoading","interpretHeader","header","result","createCompletion","model","prompt","temperature","max_tokens","data","choices","text","trim","error","setError","fetchInterpretations","newInterpretations","length","children","style","display","flexDirection","justifyContent","alignItems","height","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","entries","map","interpretation","_c","$RefreshReg$"],"sources":["/Users/acecanacan/my-react-app/src/components/header_interpret.js"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo } from \"react\";\nconst { Configuration, OpenAIApi } = require(\"openai\");\n\nconst Header_Interpret = ({ csvHeaders }) => {\n  const openai = useMemo(() => {\n    const configuration = new Configuration({\n      apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    });\n    return new OpenAIApi(configuration);\n  }, []);\n\n  const [interpretations, setInterpretations] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const interpretHeader = useCallback(async (header) => {\n    const result = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `Interpret the column header \"${header}\" in a CSV file.`,\n      temperature: 0.5,\n      max_tokens: 100,\n    });\n    return result.data.choices[0].text.trim();\n  }, [openai]);\n // Added openai to the dependency array\n  \n\n const [error, setError] = useState(null);\n\n useEffect(() => {\n   const fetchInterpretations = async () => {\n     setLoading(true);\n     setError(null);  // Reset the error state\n     const newInterpretations = {};\n \n     for (const header of csvHeaders) {\n       try {\n         newInterpretations[header] = await interpretHeader(header);\n       } catch (error) {\n         newInterpretations[header] = \"Error interpreting header\";\n         setError(\"An error occurred while interpreting headers\");  // Set the error state\n       }\n     }\n     \n     setInterpretations(newInterpretations);\n     setLoading(false);\n   };\n \n   if (csvHeaders.length > 0) {\n     fetchInterpretations();\n   }\n }, [csvHeaders, interpretHeader]);\n\n  return (\n    \n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        {/* Your existing form can stay here */}\n        {loading && <p>Loading interpretations...</p>}\n      </div>\n      {Object.keys(interpretations).length > 0 && (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <h2>Interpretations</h2>\n          {Object.entries(interpretations).map(([header, interpretation]) => (\n            <div key={header}>\n              <strong>{header}:</strong> {interpretation}\n            </div>\n          ))}\n        </div>\n      )}\n      {error && <p>{error}</p>}\n    </>\n    \n  );\n};\n\nexport default Header_Interpret;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}