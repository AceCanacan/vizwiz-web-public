{"ast":null,"code":"var _jsxFileName = \"/Users/acecanacan/my-react-app/src/components/header_interpret.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://api.openai.com/v1/engines/text-davinci-003/completions';\nconst API_KEY = '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'; // Replace this with your actual OpenAI API Key\n\nconst Header_Interpret = ({\n  csvHeaders\n}) => {\n  _s();\n  const [interpretations, setInterpretations] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const interpretHeader = useCallback(async header => {\n    const payload = {\n      prompt: `Interpret the column header \"${header}\" in a CSV file.`,\n      max_tokens: 100,\n      temperature: 0.5\n    };\n    try {\n      const response = await axios.post(API_URL, payload, {\n        headers: {\n          'Authorization': `Bearer ${API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data.choices[0].text.trim();\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error response from OpenAI:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      return \"Error interpreting header\";\n    }\n  }, []);\n  useEffect(() => {\n    const fetchInterpretations = async () => {\n      setLoading(true);\n      setError(null);\n      const newInterpretations = {};\n      for (const header of csvHeaders) {\n        newInterpretations[header] = await interpretHeader(header);\n      }\n      setInterpretations(newInterpretations);\n      setLoading(false);\n    };\n    if (csvHeaders.length > 0) {\n      fetchInterpretations();\n    }\n  }, [csvHeaders, interpretHeader]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100px'\n      },\n      children: loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading interpretations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), Object.keys(interpretations).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Interpretations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), Object.entries(interpretations).map(([header, interpretation]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [header, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), \" \", interpretation]\n      }, header, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_s(Header_Interpret, \"In7oOjkcYVEZhLCLj0wr71yZJYk=\");\n_c = Header_Interpret;\nexport default Header_Interpret;\nvar _c;\n$RefreshReg$(_c, \"Header_Interpret\");","map":{"version":3,"names":["useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","API_KEY","Header_Interpret","csvHeaders","_s","interpretations","setInterpretations","loading","setLoading","error","setError","interpretHeader","header","payload","prompt","max_tokens","temperature","response","post","headers","data","choices","text","trim","_error$response","console","fetchInterpretations","newInterpretations","length","children","style","display","flexDirection","justifyContent","alignItems","height","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","entries","map","interpretation","_c","$RefreshReg$"],"sources":["/Users/acecanacan/my-react-app/src/components/header_interpret.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n\nconst API_URL = 'https://api.openai.com/v1/engines/text-davinci-003/completions';\nconst API_KEY = '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';  // Replace this with your actual OpenAI API Key\n\nconst Header_Interpret = ({ csvHeaders }) => {\n    const [interpretations, setInterpretations] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const interpretHeader = useCallback(async (header) => {\n        const payload = {\n            prompt: `Interpret the column header \"${header}\" in a CSV file.`,\n            max_tokens: 100,\n            temperature: 0.5\n        };\n\n        try {\n            const response = await axios.post(API_URL, payload, {\n                headers: {\n                    'Authorization': `Bearer ${API_KEY}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n            return response.data.choices[0].text.trim();\n        } catch (error) {\n            console.error(\"Error response from OpenAI:\", error.response?.data);\n            return \"Error interpreting header\";\n        }\n    }, []);\n\n    useEffect(() => {\n        const fetchInterpretations = async () => {\n            setLoading(true);\n            setError(null);\n            const newInterpretations = {};\n\n            for (const header of csvHeaders) {\n                newInterpretations[header] = await interpretHeader(header);\n            }\n            \n            setInterpretations(newInterpretations);\n            setLoading(false);\n        };\n\n        if (csvHeaders.length > 0) {\n            fetchInterpretations();\n        }\n    }, [csvHeaders, interpretHeader]);\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: '100px' }}>\n                {loading && <p>Loading interpretations...</p>}\n            </div>\n            {Object.keys(interpretations).length > 0 && (\n                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                    <h2>Interpretations</h2>\n                    {Object.entries(interpretations).map(([header, interpretation]) => (\n                        <div key={header}>\n                            <strong>{header}:</strong> {interpretation}\n                        </div>\n                    ))}\n                </div>\n            )}\n            {error && <p>{error}</p>}\n        </>\n    );\n};\n\nexport default Header_Interpret;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}