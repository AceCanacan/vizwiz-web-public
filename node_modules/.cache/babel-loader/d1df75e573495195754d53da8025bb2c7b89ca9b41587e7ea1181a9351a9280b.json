{"ast":null,"code":"var _jsxFileName = \"/Users/acecanacan/my-react-app/src/components/header_interpret.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = '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';\nconst Header_Interpret = ({\n  csvHeaders\n}) => {\n  _s();\n  const [interpretations, setInterpretations] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const interpretHeader = useCallback(async header => {\n    const systemMessage = {\n      role: 'system',\n      content: `Interpret the CSV column header \"${header}\" in a very brief but detailed manner. Not more than two sentences`\n    };\n    const messages = [systemMessage];\n    try {\n      const response = await axios.post(API_URL, {\n        model: 'gpt-3.5-turbo',\n        messages: messages\n      }, {\n        headers: {\n          Authorization: `Bearer ${API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data.choices[0].message.content.trim();\n    } catch (error) {\n      var _error$response;\n      console.error('Error response from OpenAI:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      return 'Error interpreting header';\n    }\n  }, []);\n  useEffect(() => {\n    const fetchInterpretations = async () => {\n      setLoading(true);\n      setError(null);\n      const newInterpretations = {};\n      for (const header of csvHeaders) {\n        newInterpretations[header] = await interpretHeader(header);\n      }\n      setInterpretations(newInterpretations);\n      setLoading(false);\n    };\n    if (csvHeaders.length > 0) {\n      fetchInterpretations();\n    }\n  }, [csvHeaders, interpretHeader]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '50px'\n      },\n      children: loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading interpretations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), Object.keys(interpretations).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Interpretations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), Object.entries(interpretations).map(([header, interpretation]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [header, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: interpretation,\n          onChange: e => {\n            // Optionally handle changes here if you need to keep track of user edits\n            setInterpretations({\n              ...interpretations,\n              [header]: e.target.value\n            });\n          },\n          style: {\n            marginLeft: '10px',\n            width: '500px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, header, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Header_Interpret, \"In7oOjkcYVEZhLCLj0wr71yZJYk=\");\n_c = Header_Interpret;\nexport default Header_Interpret;\nvar _c;\n$RefreshReg$(_c, \"Header_Interpret\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","API_KEY","Header_Interpret","csvHeaders","_s","interpretations","setInterpretations","loading","setLoading","error","setError","interpretHeader","header","systemMessage","role","content","messages","response","post","model","headers","Authorization","data","choices","message","trim","_error$response","console","fetchInterpretations","newInterpretations","length","children","style","display","flexDirection","justifyContent","alignItems","height","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","entries","map","interpretation","marginBottom","type","value","onChange","e","target","marginLeft","width","_c","$RefreshReg$"],"sources":["/Users/acecanacan/my-react-app/src/components/header_interpret.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = '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';\n\nconst Header_Interpret = ({ csvHeaders }) => {\n  const [interpretations, setInterpretations] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const interpretHeader = useCallback(async (header) => {\n    const systemMessage = {\n      role: 'system',\n      content: `Interpret the CSV column header \"${header}\" in a very brief but detailed manner. Not more than two sentences`,\n    };\n\n    const messages = [systemMessage];\n\n    try {\n      const response = await axios.post(\n        API_URL,\n        {\n          model: 'gpt-3.5-turbo',\n          messages: messages,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      return response.data.choices[0].message.content.trim();\n    } catch (error) {\n      console.error('Error response from OpenAI:', error.response?.data);\n      return 'Error interpreting header';\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchInterpretations = async () => {\n      setLoading(true);\n      setError(null);\n      const newInterpretations = {};\n\n      for (const header of csvHeaders) {\n        newInterpretations[header] = await interpretHeader(header);\n      }\n\n      setInterpretations(newInterpretations);\n      setLoading(false);\n    };\n\n    if (csvHeaders.length > 0) {\n      fetchInterpretations();\n    }\n  }, [csvHeaders, interpretHeader]);\n\n  return (\n    <>\n      <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: '50px' }}>\n        {loading && <p>Loading interpretations...</p>}\n      </div>\n      {Object.keys(interpretations).length > 0 && (\n        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n          <h2>Interpretations</h2>\n          {Object.entries(interpretations).map(([header, interpretation]) => (\n            <div key={header} style={{ marginBottom: '10px' }}>\n              <strong>{header}:</strong>\n              <input \n                type=\"text\" \n                value={interpretation}\n                onChange={(e) => {\n                  // Optionally handle changes here if you need to keep track of user edits\n                  setInterpretations({\n                    ...interpretations,\n                    [header]: e.target.value\n                  });\n                }}\n                style={{ marginLeft: '10px', width: '500px' }}\n              />\n            </div>\n          ))}\n        </div>\n      )}\n      {error && <p>{error}</p>}\n    </>\n  );\n  \n};\n\nexport default Header_Interpret;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}