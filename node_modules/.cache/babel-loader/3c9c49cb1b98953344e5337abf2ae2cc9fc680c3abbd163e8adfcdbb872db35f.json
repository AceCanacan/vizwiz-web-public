{"ast":null,"code":"var _jsxFileName = \"/Users/acecanacan/my-react-app/src/components/header_interpret.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = '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'; // Replace with your actual API key\n\nconst Header_Interpret = ({\n  csvHeaders,\n  onInterpretationComplete\n}) => {\n  _s();\n  const [interpretations, setInterpretations] = useState({});\n  const [datasetInterpretation, setDatasetInterpretation] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [operationCompleted, setOperationCompleted] = useState(false);\n  const navigate = useNavigate();\n  const interpretHeader = useCallback(async header => {\n    try {\n      const systemMessage = {\n        role: 'system',\n        content: `Interpret the CSV column header \"${header}\" in a very brief but detailed manner. Not more than two sentences`\n      };\n      const response = await axios.post(API_URL, {\n        model: 'gpt-3.5-turbo',\n        messages: [systemMessage]\n      }, {\n        headers: {\n          Authorization: `Bearer ${API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data.choices[0].message.content.trim();\n    } catch (error) {\n      var _error$response;\n      console.error('Error response from OpenAI:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      return 'Error interpreting header';\n    }\n  }, []);\n  const interpretDataset = useCallback(async () => {\n    try {\n      const systemMessage = {\n        role: 'system',\n        content: `Provide an overall interpretation of a dataset in 2 sentences: ${csvHeaders.join(', ')}`\n      };\n      const response = await axios.post(API_URL, {\n        model: 'gpt-3.5-turbo',\n        messages: [systemMessage]\n      }, {\n        headers: {\n          Authorization: `Bearer ${API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data.choices[0].message.content.trim();\n    } catch (error) {\n      var _error$response2;\n      console.error('Error response from OpenAI:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      return 'Error interpreting dataset';\n    }\n  }, [csvHeaders]);\n  const interpretHeadersAndDataset = async () => {\n    if (operationCompleted) {\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const headerPromises = csvHeaders.map(header => interpretHeader(header));\n      const [headerResults, datasetResult] = await Promise.all([Promise.all(headerPromises), interpretDataset()]);\n      const newInterpretations = {};\n      csvHeaders.forEach((header, index) => {\n        newInterpretations[header] = headerResults[index];\n      });\n      setInterpretations(newInterpretations);\n      setDatasetInterpretation(datasetResult);\n\n      // Inform the parent component that the interpretation is complete\n      if (onInterpretationComplete) {\n        onInterpretationComplete(datasetResult, newInterpretations);\n      }\n      setLoading(false);\n      setOperationCompleted(true);\n    } catch (e) {\n      setError('An error occurred while interpreting the data.');\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    interpretHeadersAndDataset();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading interpretations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }, this), datasetInterpretation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded-box centered-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-title\",\n        children: \"Overall Dataset Interpretation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"rounded-input\",\n        value: datasetInterpretation,\n        onChange: e => setDatasetInterpretation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), Object.keys(interpretations).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded-box centered-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-title\",\n        children: \"Header Interpretations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), Object.entries(interpretations).map(([header, interpretation]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-label\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [header, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"rounded-input\",\n          type: \"text\",\n          value: interpretation,\n          onChange: e => {\n            setInterpretations({\n              ...interpretations,\n              [header]: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, header, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reusable-button\",\n        onClick: () => navigate('/generate_questions'),\n        children: \"Submit and Generate Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Header_Interpret, \"MDkaUajSINT8AQF3sVFAJh6PBUA=\", false, function () {\n  return [useNavigate];\n});\n_c = Header_Interpret;\nexport default Header_Interpret;\nvar _c;\n$RefreshReg$(_c, \"Header_Interpret\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","API_KEY","Header_Interpret","csvHeaders","onInterpretationComplete","_s","interpretations","setInterpretations","datasetInterpretation","setDatasetInterpretation","loading","setLoading","error","setError","operationCompleted","setOperationCompleted","navigate","interpretHeader","header","systemMessage","role","content","response","post","model","messages","headers","Authorization","data","choices","message","trim","_error$response","console","interpretDataset","join","_error$response2","interpretHeadersAndDataset","headerPromises","map","headerResults","datasetResult","Promise","all","newInterpretations","forEach","index","e","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","target","Object","keys","length","entries","interpretation","type","onClick","_c","$RefreshReg$"],"sources":["/Users/acecanacan/my-react-app/src/components/header_interpret.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = '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'; // Replace with your actual API key\n\nconst Header_Interpret = ({ csvHeaders, onInterpretationComplete }) => {\n  const [interpretations, setInterpretations] = useState({});\n  const [datasetInterpretation, setDatasetInterpretation] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [operationCompleted, setOperationCompleted] = useState(false);\n\n  const navigate = useNavigate();\n\n  const interpretHeader = useCallback(async (header) => {\n    try {\n      const systemMessage = {\n        role: 'system',\n        content: `Interpret the CSV column header \"${header}\" in a very brief but detailed manner. Not more than two sentences`,\n      };\n      const response = await axios.post(\n        API_URL,\n        {\n          model: 'gpt-3.5-turbo',\n          messages: [systemMessage],\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      return response.data.choices[0].message.content.trim();\n    } catch (error) {\n      console.error('Error response from OpenAI:', error.response?.data);\n      return 'Error interpreting header';\n    }\n  }, []);\n\n  const interpretDataset = useCallback(async () => {\n    try {\n      const systemMessage = {\n        role: 'system',\n        content: `Provide an overall interpretation of a dataset in 2 sentences: ${csvHeaders.join(', ')}`,\n      };\n      const response = await axios.post(\n        API_URL,\n        {\n          model: 'gpt-3.5-turbo',\n          messages: [systemMessage],\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      return response.data.choices[0].message.content.trim();\n    } catch (error) {\n      console.error('Error response from OpenAI:', error.response?.data);\n      return 'Error interpreting dataset';\n    }\n  }, [csvHeaders]);\n\n\n  const interpretHeadersAndDataset = async () => {\n    if (operationCompleted) {\n      return;\n    }\n    setLoading(true);\n    setError(null);\n\n    try {\n      const headerPromises = csvHeaders.map(header => interpretHeader(header));\n      const [headerResults, datasetResult] = await Promise.all([\n        Promise.all(headerPromises),\n        interpretDataset(),\n      ]);\n\n      const newInterpretations = {};\n      csvHeaders.forEach((header, index) => {\n        newInterpretations[header] = headerResults[index];\n      });\n\n      setInterpretations(newInterpretations);\n      setDatasetInterpretation(datasetResult);\n\n        // Inform the parent component that the interpretation is complete\n  if (onInterpretationComplete) {\n    onInterpretationComplete(datasetResult, newInterpretations);\n  }\n\n  setLoading(false);\n  setOperationCompleted(true); \n      \n    } catch (e) {\n      setError('An error occurred while interpreting the data.');\n      setLoading(false);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    interpretHeadersAndDataset();\n  }, []);  \n\n  return (\n    <>\n      {loading && <p>Loading interpretations...</p>}\n      {datasetInterpretation && (\n        <div className=\"rounded-box centered-content\">\n          <div className=\"header-title\">Overall Dataset Interpretation</div>\n          <textarea\n            className=\"rounded-input\"\n            value={datasetInterpretation}\n            onChange={(e) => setDatasetInterpretation(e.target.value)}\n          />\n        </div>\n      )}\n      {Object.keys(interpretations).length > 0 && (\n        <div className=\"rounded-box centered-content\">\n          <div className=\"header-title\">Header Interpretations</div>\n          {Object.entries(interpretations).map(([header, interpretation]) => (\n            <div key={header}>\n              <div className=\"header-label\"><strong>{header}:</strong></div>\n              <input\n                className=\"rounded-input\"\n                type=\"text\"\n                value={interpretation}\n                onChange={(e) => {\n                  setInterpretations({\n                    ...interpretations,\n                    [header]: e.target.value,\n                  });\n                }}\n              />\n            </div>\n          ))}\n          <button className=\"reusable-button\" onClick={() => navigate('/generate_questions')}>\n  Submit and Generate Questions\n</button>\n        </div>\n      )}\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default Header_Interpret;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}